name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -r requirements.txt

      - name: Analyse code with pylint
        run: |
          python -m pylint $(git ls-files '*.py')

      # - name: Run tests with pytest
      #   run: |
      #     pip install pytest
      #     pytest

  deploy:
    name: Deploy fastapi
    # 1. Garante que o deploy só rode se o lint e testes passarem
    needs: lint-and-test
    # 2. Garante que o deploy só rode em push (não em pull request)
    if: github.event_name == 'push'
    permissions:
      deployments: write # Permissão necessária se usar "environments"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        # Atualizado para v4 por consistência
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. STEPS REMOVIDOS ("Enter directory" e "Get project code")
      # Eles eram desnecessários. O 'actions/checkout' acima já
      # baixou o código para o diretório de trabalho.

      - name: Build and push Docker image
        run: |
          # Este comando agora roda no diretório raiz do repositório,
          # onde o Dockerfile deve estar.
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
            docker stop fastapi-app || true
            docker rm fastapi-app || true
            docker run -d --name fastapi-app -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
